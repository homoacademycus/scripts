version: 2
networks:
    frontend-net:
        external: true
    backend-net:
volumes:
    web-static:
    data-mysql:
services:
    react-nginx:
        image: react-nginx:base
        read_only: true
        volumes:
            - web-static:${NGINX_STATIC_DIR}:rw
        networks:
            - frontend-net
        ports:
            - ${PORT_HTTP}:${PORT_HTTP}
            - ${PORT_HTTPS}:${PORT_HTTPS}
        expose:
            - ${PORT_NGINX}
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: react
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false

    django:
        image: django:base
        expose:
            - ${PORT_DJANGO}
        networks:
            - backend-net
        volumes:
            - web-static:${DJANGO_STATIC_DIR}:ro
            #- web-static:${DJANGO_STATIC_DIR}:rw
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: django
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false
        command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --daemon

    mysql:
        image: mysql:latest
        networks:
            - backend-net
        expose:
            - ${PORT_MYSQL}
        read_only: true
        tmpfs:
            - ${MYSQL_RUNTIME_DIR}:uid=${CONTAINER_UID},gid=${CONTAINER_GID}
            - /tmp
        volumes:
            #- data-mysql:${MYSQL_DATA_DIR}:rw
            - data-mysql:${MYSQL_DATA_DIR}:ro
        environment:
            MYSQL_DATABASE: ${MYSQL_USER}
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWD}
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: mysql
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false
        command:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci


