version: "3.4"

services:
  master:
    image: spark-base
    volumes:
      - /opt/src/spark/config/hadoop/namenode:/tempcfg/hadoop
      - /mnt/data/hdfs/namenode:/hdfs/namenode
    entryporint: /hdfs
    command:
      - "cp -r /tempcfg/hadoop/*.xml $HADOOP_CONF_DIR"
      - "sh /tempcfg/hadoop/initialize.sh"
    networks:
      - hdfs-net
    expose:
      - "9000"
      - "7077"
      - "8021"
    ports:
      - "9870:9870"
      - "8088:8088"
    logging:
      driver: "json-file"
    deploy:
      mode: replicated
        replicas: 3
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
        failure_action: rollback
      resources:
        limits:
          cpus: '0.25'
          memory: 3g
          memory-swap: 4g
      endpoint_mode: vip

  slave:
    image: spark-base
    volumes:
      - /opt/src/spark/config/hadoop/datanode:/tempcfg/hadoop
      - /mnt/data/hdfs/datanode:/hdfs/datanode
      - /mnt/data/hdfs/tmp:/hdfs/tmp
      - /mnt/data/hdfs/logs:/hdfs/logs
      - /mnt/data/hdfs/logs:/hdfs/applogs
    entryporint: /hdfs
    command:
      - "cp -r /tempcfg/hadoop/*.xml $HADOOP_CONFIG_HOME"
      - "sh /tempcfg/hadoop/initialize.sh"
    networks:
      - hdfs-net
    expose:
      - "9000"
      - "7077"
      - "8021"
    logging:
      driver: "json-file"
    deploy:
      mode: replicated
        replicas: 3
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
        failure_action: rollback
      resources:
        limits:
          cpus: '0.25'
          memory: 3g
          memory-swap: 4g
      endpoint_mode: vip