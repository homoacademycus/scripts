version: 2
networks:
    frontend-net:
        external: true
    backend-net:
volumes:
    web-static:
    data-mongo:
services:
    react-nginx:
        image: react-nginx:base
        read_only: true
        tmpfs:
            - /tmp
        volumes:
            - web-static:${NGINX_STATIC_DIR}:ro
        networks:
            - frontend-net
        ports:
            - ${PORT_HTTP}:${PORT_HTTP}
            - ${PORT_HTTPS}:${PORT_HTTPS}
        expose:
            - ${PORT_NGINX}
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: react
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false

    nodeweb:
        image: nodeweb:base
        read_only: true
        tmpfs:
            - /tmp
        volumes:
            - web-static:${NODEWEB_STATIC_DIR}:ro
        networks:
            - backend-net
        ports:
            - ${PORT_HTTP}:${PORT_HTTP}
            - ${PORT_HTTPS}:${PORT_HTTPS}
        expose:
            - ${PORT_NGINX}
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: nodeweb
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false

    mongodb:
        image: mongo:latest
        networks:
            - backend-net
        expose:
            - ${PORT_MONGO}
        read_only: true
        tmpfs:
            - /tmp
        volumes:
            - data-mongo:${MONGO_DATA_DIR}:ro
        environment:
            MYSQL_DATABASE: ${MYSQL_USER}
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWD}
        security_opt:
          #- label:user:USERNAME #labeling scheme for each container
          #- label:role:ROLENAME #labeling scheme for each container
        cap_drop:
          - ALL
        cap_add:
          - NET_BIND_SERVICE
        user: mongo
        group_add:
            - containersGroup #to rw on same Host File(소유권한 그룹)
        privileged: false



