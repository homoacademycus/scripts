# Copyright homoacademycus@github.com | MIT Licnese
#
pid        /var/run/nginx.pid; # 마스터 프로세스의 ID
user  nginx; # 워커 프로세스의 사용자권한
worker_processes  1; # 실질적 웹서버 역할. CPU 코어수 고려해야.

events { # 비동기 이벤트 처리 방식

         # 최대 접속자수 = worker_processes 수 x worker_connections 수
    worker_connections  1024; # 하나의 worker 프로세스가 처리할 수 있는 연결 수
    multi_accept on;

}
http { # 여러 server 블록 포함가능

    include     /etc/nginx/mime.types;
    include 	/etc/nginx/conf.d/*.conf;
    include     /etc/nginx/default.d/*.conf;

    server { # HTTP is redirected to HTTPS
        server_name  example.com;
        listen       80;        
        return  301 HTTPS://$server_name$request_uri;
    }
    server { # HTTPS
        servername  example.com;
        listen      443 ssl default_server;
        ssl_protocols TLSv1.1 TLSv1.2;        
        ssl_certificate /path/to/mergedCAcerts;
        ssl_certificate_key /path/to/privKey;
        
        location / {
            root         /usr/share/nginx/html;
            try_files   $uri $uri/ /index.html;

            proxy_http_version     1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://127.0.0.1:8888;
        }
        location /ws { # WebSocket 관련 설정을 Reverse proxy 설정에 추가
            proxy_http_version     1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
        }
    }
    keepalive_timeout  10; # 연결을 몇초 유지?(default=10) 값이 높으면 불필요한 접속 유지
    #tcp_nopush     on;
    sendfile        on;
    #gzip  on;

    default_type  application/octet-stream;
    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log warn; # 로그 모드 warn 또는 debug
    log_format  main  '$remote_addr - $remote_user "$request" ';

}

